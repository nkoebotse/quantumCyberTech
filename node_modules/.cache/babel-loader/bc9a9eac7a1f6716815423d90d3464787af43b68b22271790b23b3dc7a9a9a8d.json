{"ast":null,"code":"import{useState}from\"react\";import{Notif}from\"./Notif\";import{formatNumber,findAccount,transact,trim,capitalize}from\"./Utils\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";export const TransactPage=props=>{const users=JSON.parse(localStorage.getItem('users'));const setNotif=props.setNotif;const notif=props.notif;const[accounts,setAccounts]=useState(users);const[selectedAccount,setSelectedAccount]=useState({balance:0});const[depositAmount,setDepositAmount]=useState(0);const options=accounts.map(user=>{return/*#__PURE__*/_jsxs(\"option\",{value:user.number,children:[user.fullname,\" #\",user.number]});});const displayBalance=e=>{setNotif(notif);const selectedNumber=e.target.value;for(const user of accounts){if(user.number===selectedNumber){setSelectedAccount(user);break;}}};const onDeposit=e=>{const amount=formatNumber(trim(e.target.value));setDepositAmount(amount);};const processTransfer=e=>{e.preventDefault();const amount=trim(e.target.elements.amount.value);const accountNumber=e.target.elements.account.value;if(amount>0&&accountNumber!==\"0\"){for(const user of accounts){if(user.number===accountNumber){transact(user.number,amount,props.type,props.setUsers);setSelectedAccount(findAccount(user.number));setAccounts(JSON.parse(localStorage.getItem('users')));setDepositAmount(0);setNotif({message:`${capitalize(props.page)} successful.`,style:'success'});break;}}}else{setNotif({message:`${capitalize(props.page)} failed.`,style:'danger'});}};// 'bx bx-up-arrow-alt'\nconst icon=props.page==='withdraw'?'bx bx-down-arrow-alt':'bx bx-up-arrow-alt';return/*#__PURE__*/_jsx(\"section\",{id:\"main-content\",children:/*#__PURE__*/_jsxs(\"form\",{id:\"form\",onSubmit:processTransfer,children:[/*#__PURE__*/_jsx(\"h1\",{children:props.page}),/*#__PURE__*/_jsx(Notif,{message:notif.message,style:notif.style}),/*#__PURE__*/_jsx(\"label\",{children:\"Account\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"account\",onChange:displayBalance,children:[/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"Select Account\"}),options]}),/*#__PURE__*/_jsx(\"label\",{children:\"Current balance\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"right\",value:formatNumber(selectedAccount.balance),disabled:true}),/*#__PURE__*/_jsx(\"div\",{className:\"transfer-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:icon})}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Amount to \",props.page]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"amount\",value:depositAmount,onChange:onDeposit,autoComplete:\"off\",className:\"right big-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn\",children:props.page})]})});};","map":{"version":3,"names":["useState","Notif","formatNumber","findAccount","transact","trim","capitalize","jsxs","_jsxs","jsx","_jsx","TransactPage","props","users","JSON","parse","localStorage","getItem","setNotif","notif","accounts","setAccounts","selectedAccount","setSelectedAccount","balance","depositAmount","setDepositAmount","options","map","user","value","number","children","fullname","displayBalance","e","selectedNumber","target","onDeposit","amount","processTransfer","preventDefault","elements","accountNumber","account","type","setUsers","message","page","style","icon","id","onSubmit","name","onChange","className","disabled","autoComplete"],"sources":["/workspaces/quantumCyberTech/src/components/TransactPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Notif } from \"./Notif\";\nimport { formatNumber, findAccount, transact, trim, capitalize } from \"./Utils\";\n\nexport const TransactPage = (props) => {\n    const users = JSON.parse(localStorage.getItem('users'));\n    const setNotif = props.setNotif;\n    const notif = props.notif;\n    const [accounts, setAccounts] = useState(users);\n    const [selectedAccount, setSelectedAccount] = useState({balance: 0});\n    const [depositAmount, setDepositAmount] = useState(0);\n\n    const options = accounts.map(user => {\n        return <option value={user.number}>{user.fullname} #{user.number}</option>\n    });\n\n    const displayBalance = (e) => {\n        setNotif(notif);\n        const selectedNumber = e.target.value;\n        \n        for(const user of accounts) {\n            if(user.number === selectedNumber) {\n                setSelectedAccount(user);\n                break;\n            }\n        }\n    }\n\n    const onDeposit = (e) => {\n        const amount = formatNumber(trim(e.target.value));\n        setDepositAmount(amount);\n    }\n\n    const processTransfer = (e) => {\n        e.preventDefault();\n        const amount = trim(e.target.elements.amount.value);\n        const accountNumber = e.target.elements.account.value;\n\n        if(amount > 0 && accountNumber !== \"0\") {\n            for(const user of accounts) {\n                if(user.number === accountNumber) {\n                    transact(user.number, amount, props.type, props.setUsers);\n                    setSelectedAccount(findAccount(user.number));\n                    setAccounts(JSON.parse(localStorage.getItem('users')));\n                    setDepositAmount(0);\n                    setNotif({message: `${capitalize(props.page)} successful.`, style: 'success'});\n                    break;\n                }\n            }\n        } \n        else {\n            setNotif({message: `${capitalize(props.page)} failed.`, style: 'danger'});\n        }\n    }\n    // 'bx bx-up-arrow-alt'\n    const icon = props.page === 'withdraw' ? 'bx bx-down-arrow-alt' : 'bx bx-up-arrow-alt';\n\n    return (\n        <section id=\"main-content\">\n            <form id=\"form\" onSubmit={processTransfer}>\n                <h1>{props.page}</h1>\n                <Notif message={notif.message} style={notif.style} />\n                <label>Account</label>\n                <select name=\"account\" onChange={displayBalance}>\n                    <option value=\"0\">Select Account</option>\n                    {options}\n                </select>\n\n                <label>Current balance</label>\n                <input type=\"text\" className=\"right\" value={formatNumber(selectedAccount.balance)} disabled />\n                \n                <div className=\"transfer-icon\"><i className={icon}></i></div>\n                <label>Amount to {props.page}</label>\n                <input type=\"text\" name=\"amount\" value={depositAmount} onChange={onDeposit} autoComplete=\"off\" className=\"right big-input\" />\n                <button type=\"submit\" className=\"btn\">{props.page}</button>\n            </form>\n        </section>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}